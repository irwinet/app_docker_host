Containers:
    Son una instancia de ejecucion de una imagen
    Son temporales
    Capa de RW
    Podemos crear varios partiendo de una misma imagen

Commands:
    docker pull jenkins:2.60.3
    docker ps
    docker run --help
    docker run -d -p 8090:8080 jenkins:2.60.3
    docker rm -f NAMES                  ---> Eliminar Contenedor
    docker rename cool_germain jenkins  ---> Renombrar Contenedor
    docker stop CONTAINER_ID            ---> Detener Contenedor
    docker start NAMES                  ---> Iniciar Contenedor
    docker restart jenkins              ---> Reiniciar Contenedor

Ingresar al Contenedor
    docker exec -ti jenkins bash
    docker exec -u root -ti jenkins bash        ---> Como usuario root

Eliminar todos los Contenedores
    docker ps -q | xargs docker rm -f
    docker run -dti --name env centos:env                       ---> Ejecutar Contenedor
    docker run -dti -e "prueba1=4321" --name env centos:env     ---> Agregar Variable
    docker exec -ti CONTAINER_ID bash                           ---> Acceder al terminal
    env                                                         ---> Ver Variables Definidas

Mysql
    docker pull mysql
    docker run -d -p 3306:3306 --name my-db1 -e "MYSQL_ROOT_PASSWORD=123456789" mysql:latest
    docker logs -f my-db1
    docker inspect my-db1
    IP = 172.17.0.3
    mysql -u root -h 172.17.0.3 -p123456789
    yum install mysql -y
    mysql -u root --port 3306 -h 172.17.0.3 -p123456789 // mysql -u root --port 3306 -h localhost -p123456789

    docker run -d -p 3333:3306 --name my-db2 -e "MYSQL_ROOT_PASSWORD=123456789" -e "MYSQL_DATABASE=docker-db" -e "MYSQL_USER=docker-user" -e "MYSQL_PASSWORD=12345" mysql:latest
    mysql -u root -p123456789 -h 127.0.0.1 --port 3333  ---> User Root
    mysql -u docker-user -p12345 -h 127.0.0.1 --port 3333  ---> User Docker-DB